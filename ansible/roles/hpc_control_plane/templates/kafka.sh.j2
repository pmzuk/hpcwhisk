#!/usr/bin/env bash
{% for module in controller.slurmModules %}
module add {{ module }}
{% endfor %}

cd $(dirname $0)/..
IP=$(hostname -i)

mkdir -p data/kafka
exec singularity run \
    --bind $PWD/data/kafka:/kafka \
    --writable-tmpfs \
    --env KAFKA_DEFAULT_REPLICATION_FACTOR="{{ kafka.replicationFactor }}" \
    --env KAFKA_BROKER_ID=0 \
    --env KAFKA_HEAP_OPTS="-Xmx{{ kafka.heap }} -Xms{{ kafka.heap }}" \
    --env KAFKA_ZOOKEEPER_CONNECT=127.0.0.1:2181 \
    --env KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR="{{ kafka.offsetsTopicReplicationFactor }}" \
    --env KAFKA_AUTO_CREATE_TOPICS_ENABLE=false \
    --env KAFKA_NUM_NETWORK_THREADS="{{ kafka.networkThreads }}" \
    --env TZ="{{ docker.timezone }}" \
{% if kafka.protocol != 'SSL' %}
    --env KAFKA_ADVERTISED_PORT={{ kafka.advertisedPort }} \
    --env KAFKA_PORT={{ kafka.advertisedPort }} \
    --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT \
    --env KAFKA_LISTENERS="EXTERNAL://0.0.0.0:{{ kafka.advertisedPort }}" \
    --env KAFKA_ADVERTISED_LISTENERS="EXTERNAL://$IP:{{ kafka.advertisedPort }}" \
    --env KAFKA_INTER_BROKER_LISTENER_NAME=EXTERNAL \
{% else %}
    --env KAFKA_ADVERTISED_PORT={{ kafka.advertisedPort }} \
    --env KAFKA_PORT={{ kafka.advertisedPort }} \
    --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:SSL \
    --env KAFKA_LISTENERS="EXTERNAL://0.0.0.0:{{ kafka.advertisedPort }},INTERNAL://:{{kafka.port}}" \
    --env KAFKA_ADVERTISED_LISTENERS="EXTERNAL://$IP:{{ kafka.advertisedPort }},INTERNAL://$IP:{{kafka.port}}" \
    --env KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL \
    --env KAFKA_SSL_KEYSTORE_LOCATION="config/{{ kafka.ssl.keystore.name }}" \
    --env KAFKA_SSL_KEYSTORE_PASSWORD="{{ kafka.ssl.keystore.password }}" \
    --env KAFKA_SSL_TRUSTSTORE_LOCATION="config/{{ kafka.ssl.keystore.name }}" \
    --env KAFKA_SSL_TRUSTSTORE_PASSWORD="{{ kafka.ssl.keystore.password }}" \
    --env KAFKA_SSL_CLIENT_AUTH="{{ kafka.ssl.client_authentication }}" \
    --env KAFKA_SSL_CIPHER_SUITES="{{ kafka.ssl.cipher_suites | join(',') }}" \
    --env KAFKA_SSL_ENABLED_PROTOCOLS="{{ kafka.ssl.protocols | join(',') }}" \
{% endif %}
    images/kafka.simg

